openapi: 3.0.0
info:
  description: This Service handles some functions at the partnerdomain
  version: 1.0.0
  title: PartnerService
  termsOfService: http://swagger.io/terms/
  contact:
    email: patrick.arnold@nuernberger.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: partner
  description: Everything about your partner
paths:
  /partners:
    post:
      tags:
      - partner
      summary: Add a partner
      description: ""
      operationId: addPartner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createPartner"
        description: Partner which must be added
        required: true
      responses:
        "201":
          description: No Content
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  "/partners/{Id}":
    get:
      tags:
      - partner
      summary: Find partner by ID
      description: Returns a single partner
      operationId: getPartnerById
      parameters:
      - name: Id
        in: path
        description: ID of the partner to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Partner"
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        "400":
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Problem"
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Partner not found
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Problem"
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
      - partner
      summary: Deletes a partner
      description: ""
      operationId: deletePartner
      parameters:
      - name: Id
        in: path
        description: Id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "201":
          description: No Content
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Partner not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      tags:
      - partner
      summary: Updates a partner
      description: ""
      operationId: updatePartner
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createPartner"
        description: partnerdata for the update
        required: true
      responses:
        "201":
          description: No Content
        "404":
          description: No partner found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
servers:
- url: http://partnerservice.nuernberger.de/v1
- url: https://partnerservice.nuernberger.de/v1
components:
  schemas:
    createPartner:
      type: object
      required:
      - firstName
      - lastName
      properties:
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - male
          - female
          - transgender
    Partner:
      type: object
      required:
      - firstName
      - lastName
      properties:
        Id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - male
          - female
          - transgender
    Problem:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: string
        detail:
          type: string
        instance:
          type: string